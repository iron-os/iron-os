diff --git a/build/config/BUILDCONFIG.gn b/build/config/BUILDCONFIG.gn
index fcc7e12834733..7798f73b73c05 100644
--- a/build/config/BUILDCONFIG.gn
+++ b/build/config/BUILDCONFIG.gn
@@ -238,6 +238,8 @@ if (target_os == "android") {
   } else {
     _default_toolchain = "//build/toolchain/linux:$target_cpu"
   }
+} else if (target_os == "ironos") {
+  _default_toolchain = "//build/toolchain/ironos:clang_$target_cpu"
 } else if (target_os == "fuchsia") {
   _default_toolchain = "//build/toolchain/fuchsia:$target_cpu"
 } else if (target_os == "ios") {
@@ -298,7 +300,8 @@ is_android = current_os == "android"
 is_chromeos = current_os == "chromeos"
 is_fuchsia = current_os == "fuchsia"
 is_ios = current_os == "ios"
-is_linux = current_os == "linux"
+is_linux = current_os == "linux" || current_os == "ironos"
+is_ironos = current_os == "ironos"
 is_mac = current_os == "mac"
 is_nacl = current_os == "nacl"
 is_win = current_os == "win" || current_os == "winuwp"
diff --git a/build/config/sanitizers/sanitizers.gni b/build/config/sanitizers/sanitizers.gni
index ded87a56715b0..b9f8861920e21 100644
--- a/build/config/sanitizers/sanitizers.gni
+++ b/build/config/sanitizers/sanitizers.gni
@@ -51,14 +51,14 @@ declare_args() {
   #
   # TODO(pcc): Remove this flag if/when CFI is enabled in all official builds.
   is_cfi = is_official_build && is_clang &&
-           ((target_os == "linux" && target_cpu == "x64") ||
+           (((target_os == "linux" || target_os == "ironos") && target_cpu == "x64") ||
             (is_chromeos && is_chromeos_device))
 
   # Enable checks for indirect function calls via a function pointer.
   # TODO(pcc): remove this when we're ready to add these checks by default.
   # https://crbug.com/701919
-  use_cfi_icall =
-      target_os == "linux" && target_cpu == "x64" && is_official_build
+  use_cfi_icall = (target_os == "linux" || target_os == "ironos") &&
+    target_cpu == "x64" && is_official_build
 
   # Print detailed diagnostics when Control Flow Integrity detects a violation.
   use_cfi_diag = false
diff --git a/build/config/ui.gni b/build/config/ui.gni
index 83ec3d7e226db..fec7ed5bbbfa7 100644
--- a/build/config/ui.gni
+++ b/build/config/ui.gni
@@ -41,7 +41,7 @@ declare_args() {
 
 assert(!use_glib || (is_linux && !is_chromecast))
 
-use_atk = is_linux && !is_chromecast && use_glib &&
+use_atk = is_linux && !is_ironos && !is_chromecast && use_glib &&
           current_toolchain == default_toolchain
 
 # Whether using Xvfb to provide a display server for a test might be
diff --git a/components/policy/BUILD.gn b/components/policy/BUILD.gn
index 998af332de4a3..c2eccb0bc813a 100644
--- a/components/policy/BUILD.gn
+++ b/components/policy/BUILD.gn
@@ -122,12 +122,17 @@ action("policy_code_generate") {
     outputs -= [ app_restrictions_path ]
   }
 
+  target_platform = target_os
+  if (target_os == "ironos") {
+    target_platform = "linux"
+  }
+
   args = [
     # Input information
     "--chrome-version-file=" + chrome_version_path,
     "--policy-templates-file=" +
         rebase_path("resources/policy_templates.json", root_build_dir),
-    "--target-platform=" + target_os,
+    "--target-platform=" + target_platform,
 
     # Output files to be generated
     "--policy-constants-header=" +
@@ -159,13 +164,18 @@ action("full_runtime_code_generate") {
     policy_common_definitions_full_runtime_proto_path,
   ]
 
+  target_platform = target_os
+  if (target_os == "ironos") {
+    target_platform = "linux"
+  }
+
   args = [
     # Input information
     "--chrome-version-file=" + chrome_version_path,
-    "--target-platform=" + target_os,
+    "--target-platform=" + target_platform,
     "--policy-templates-file=" +
         rebase_path("resources/policy_templates.json", root_build_dir),
-    "--target-platform=" + target_os,
+    "--target-platform=" + target_platform,
 
     # Output files to be generated
     "--cloud-policy-full-runtime-protobuf=" +
diff --git a/components/resources/BUILD.gn b/components/resources/BUILD.gn
index db317cd4e3260..f14ca81db306c 100644
--- a/components/resources/BUILD.gn
+++ b/components/resources/BUILD.gn
@@ -94,6 +94,10 @@ action("about_credits") {
 
   outputs = [ about_credits_file ]
 
+  if (target_os == "ironos") {
+    target_os = "linux"
+  }
+
   args = [
     "--target-os=$target_os",
     "--depfile",
diff --git a/content/browser/web_contents/web_contents_impl.cc b/content/browser/web_contents/web_contents_impl.cc
index f28855f738e3b..cf8865393b0b4 100644
--- a/content/browser/web_contents/web_contents_impl.cc
+++ b/content/browser/web_contents/web_contents_impl.cc
@@ -5858,10 +5858,7 @@ void WebContentsImpl::DidNavigateAnyFramePostCommit(
 
 bool WebContentsImpl::CanOverscrollContent() const {
   OPTIONAL_TRACE_EVENT0("content", "WebContentsImpl::CanOverscrollContent");
-  // Disable overscroll when touch emulation is on. See crbug.com/369938.
-  if (force_disable_overscroll_content_)
-    return false;
-  return delegate_ && delegate_->CanOverscrollContent();
+  return false;
 }
 
 void WebContentsImpl::OnThemeColorChanged(PageImpl& page) {
diff --git a/third_party/widevine/cdm/widevine.gni b/third_party/widevine/cdm/widevine.gni
index 8c2d16bd54c9d..15c9f3d273c01 100644
--- a/third_party/widevine/cdm/widevine.gni
+++ b/third_party/widevine/cdm/widevine.gni
@@ -27,6 +27,7 @@ if (is_chromeos && !is_chromeos_device) {
     (is_chromeos &&
      (target_cpu == "x64" || target_cpu == "arm" || target_cpu == "arm64")) ||
     (target_os == "linux" && target_cpu == "x64") ||
+    (is_ironos && (target_cpu == "x64" || target_cpu == "arm64")) ||
     (target_os == "mac" && (target_cpu == "x64" || target_cpu == "arm64")) ||
     (target_os == "win" && (target_cpu == "x86" || target_cpu == "x64"))
 
diff --git a/tools/variations/fieldtrial_to_struct.py b/tools/variations/fieldtrial_to_struct.py
index 9ecf38974795f..3afde792b94d5 100755
--- a/tools/variations/fieldtrial_to_struct.py
+++ b/tools/variations/fieldtrial_to_struct.py
@@ -41,6 +41,7 @@ _platforms = [
     'linux',
     'mac',
     'windows',
+    'ironos',
 ]
 
 _form_factors = [
@@ -217,6 +218,9 @@ def main(arguments):
   if not opts.platform:
     parser.error('You must specify at least 1 --platform.')
 
+  if opts.platform == 'ironos':
+      opts.platform = 'linux'
+
   description_filename = os.path.normpath(args[0])
   shortroot = opts.output
   if opts.destdir:
diff --git a/build/toolchain/ironos/BUILD.gn b/build/toolchain/ironos/BUILD.gn
new file mode 100644
index 0000000000000..99d91182f4f31
--- /dev/null
+++ b/build/toolchain/ironos/BUILD.gn
@@ -0,0 +1,31 @@
+# Copyright 2013 The Chromium Authors. All rights reserved.
+# Use of this source code is governed by a BSD-style license that can be
+# found in the LICENSE file.
+
+import("//build/config/ozone.gni")
+import("//build/config/sysroot.gni")
+import("//build/toolchain/gcc_toolchain.gni")
+
+clang_toolchain("clang_arm") {
+  toolchain_args = {
+    current_cpu = "arm"
+    current_os = "linux"
+  }
+}
+
+clang_toolchain("clang_arm64") {
+  toolchain_args = {
+    current_cpu = "arm64"
+    current_os = "linux"
+  }
+}
+
+clang_toolchain("clang_x64") {
+  # Output linker map files for binary size analysis.
+  enable_linker_map = true
+
+  toolchain_args = {
+    current_cpu = "x64"
+    current_os = "linux"
+  }
+}
\ No newline at end of file
